import type { NextComponentType } from "next";
import Head from "next/head";
import React, { useState, useEffect } from "react";
import Link from "next/link";
import styles from "../styles/Home.module.scss";
import LocalLibraryIcon from "@mui/icons-material/LocalLibrary";
import MenuBookIcon from "@mui/icons-material/MenuBook";
import ArchiveIcon from "@mui/icons-material/Archive";
import HelpCenterIcon from "@mui/icons-material/HelpCenter";
import Alert from "../components/Alerts/Alert";
import { alerts } from "../data/alerts";
import Navbar from "../components/Navbar";
import CaptchaCheck from "../components/Alerts/CaptchaCheck";

const Home: NextComponentType = () => {
  const [showAlertWriteToUs, setShowAlertWriteToUs] = useState(false);
  const [showAlert5Min, setShowAlert5Min] = useState(false);
  const [showAlertEN, setshowAlertEN] = useState(false);

  const [alertDisplayed, setAlertDisplayed] = useState(false);
  const [passedSpyCheck, setPassedSpyCheck] = useState(false);

  useEffect(() => {
    alertDisplayed
      ? (document.body.style.overflow = "hidden")
      : (document.body.style.overflow = "visible");
  }, [alertDisplayed]);

  useEffect(() => {
    showAlertWriteToUs || showAlert5Min || showAlertEN
      ? setAlertDisplayed(true)
      : setAlertDisplayed(false);

    !showAlert5Min && setPassedSpyCheck(true);
  }, [showAlertWriteToUs, showAlert5Min, showAlertEN]);

  if (!passedSpyCheck) {
    setTimeout(() => {
      setShowAlert5Min(true);
    }, 300000);
  }

  return (
    <>
      <Head>
        <title>APKRF.NET</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="my-container py-8">
        <div className={windStyles.wrapper}>
          <div className="header min-h-screen">
            <Navbar setshowAlertEN={setshowAlertEN} />
            <div className="title mt-4 md:mt-12">
              <div className="title-main  text-4xl md:text-5xl md:text-center text-right">
                учебно-методическая группа
              </div>
              <div className="title-sub  text-2xl md:text-4xl pt-4 md:text-center text-right">
                по арбитражному процессу
              </div>
            </div>
            <div className="main flex flex-col md:flex-row justify-between md:pt-36 pt-16">
              <div className="events md:w-1/3">
                <div className={`${styles.title} title`}>
                  предстоящие заседания
                </div>
                <div className="title-sub  text-xl mt-4 mb-6 md:mb-0 md:mt-12">
                  на данный момент заседаний не планируется
                </div>
              </div>
              <div className="links text-xl mt-4">
                <Link href="/guide" passHref>
                  <p className="cursor-pointer hover:text-lime-600 mb-4">
                    <LocalLibraryIcon
                      fontSize="large"
                      className="mr-2 text-zinc-300"
                    />
                    гайд для аспирантов
                  </p>
                </Link>
                <Link href="/literature" passHref>
                  <p className="cursor-pointer hover:text-lime-600 mb-4">
                    <MenuBookIcon
                      fontSize="large"
                      className="mr-2 text-zinc-300"
                    />
                    литература
                  </p>
                </Link>
                <Link href="/archive" passHref>
                  <p className="cursor-pointer hover:text-lime-600 mb-4">
                    <ArchiveIcon
                      fontSize="large"
                      className="mr-2 text-zinc-300"
                    />
                    архив объявлений
                  </p>
                </Link>
                <button onClick={() => setShowAlertWriteToUs(true)}>
                  <p className="hover:text-lime-600 ">
                    <HelpCenterIcon
                      fontSize="large"
                      className="mr-2 text-zinc-300 "
                    />
                    вопросы? напишите нам
                  </p>
                </button>
              </div>
            </div>
          </div>
        </div>
      </div>
      {showAlertWriteToUs && (
        <Alert
          title={alerts[0].title}
          text={alerts[0].text}
          setState={setShowAlertWriteToUs}
        />
      )}
      {showAlert5Min && (
        <Alert
          title={alerts[1].title}
          text={alerts[1].text}
          setState={setShowAlert5Min}
          extra={<CaptchaCheck setState={setShowAlert5Min} />}
        />
      )}
      {showAlertEN && (
        <Alert
          title={alerts[2].title}
          text={alerts[2].text}
          setState={setshowAlertEN}
        />
      )}
    </>
  );
};

export default Home;

const windStyles = {
  wrapper: "wrapper w-11/12 md:w-11/12 lg:w-4/5 m-auto xl:w-3/5",
  menu: "menu flex justify-between font-bold",
  link: "hover:text-lime-600",
};
